{
  "_args": [
    [
      {
        "name": "redbox-react",
        "raw": "redbox-react@https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
        "rawSpec": "https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
        "type": "remote"
      },
      "/home/appifi/release/appifi-tarball"
    ]
  ],
  "_from": "redbox-react@>=1.2.2 <2.0.0",
  "_id": "redbox-react@1.2.5",
  "_inCache": true,
  "_location": "/redbox-react",
  "_phantomChildren": {},
  "_requested": {
    "name": "redbox-react",
    "raw": "redbox-react@https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
    "rawSpec": "https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/babel-preset-react-hmre"
  ],
  "_resolved": "https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
  "_shasum": "15e2b33085350f60eee4963affdcc85d24000f56",
  "_shrinkwrap": null,
  "_spec": "redbox-react@https://registry.npmjs.org/redbox-react/-/redbox-react-1.2.5.tgz",
  "_where": "/home/appifi/release/appifi-tarball",
  "author": {
    "email": "david@keywordbrain.com",
    "name": "David Pfahler"
  },
  "bugs": {
    "url": "https://github.com/KeywordBrain/redbox-react/issues"
  },
  "dependencies": {
    "error-stack-parser": "^1.3.6",
    "object-assign": "^4.0.1"
  },
  "description": "A redbox (rsod) component to display your errors.",
  "devDependencies": {
    "babel": "^5.5.8",
    "babel-core": "^5.6.18",
    "babel-eslint": "^3.1.15",
    "babel-loader": "^5.1.4",
    "babel-plugin-rewire": "^0.1.22",
    "react-addons-test-utils": "^0.14.0 || ^15.0.0",
    "rimraf": "^2.3.4",
    "semantic-release": "^4.0.0",
    "standard": "^5.0.0-2",
    "tap-spec": "^4.0.2",
    "tape": "^4.0.1",
    "webpack": "^1.9.6",
    "webpack-dev-server": "^1.8.2"
  },
  "files": [
    "dist",
    "lib",
    "src"
  ],
  "homepage": "https://github.com/KeywordBrain/redbox-react",
  "keywords": [
    "redbox",
    "rsod",
    "react",
    "react-native"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "redbox-react",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0"
  },
  "readme": "# redbox-react\n\n[![Build Status](https://travis-ci.org/KeywordBrain/redbox-react.svg?branch=master)](https://travis-ci.org/KeywordBrain/redbox-react)\n\nThe red box (aka red screen of death) renders an error in this “pretty” format:\n\n<img src=\"http://i.imgur.com/9Jhlibk.png\" alt=\"red screen of death\" width=\"700\" />\n\n## Usage\nCatch an error and give it to `redbox-react`. Works with\n* [react-transform-catch-errors](https://github.com/gaearon/react-transform-catch-errors) ([see example](https://github.com/KeywordBrain/redbox-react/tree/master/examples/react-transform-catch-errors) or [react-transform-boilerplate](https://github.com/gaearon/react-transform-boilerplate/))\n* [babel-plugin-react-hot](https://github.com/loggur/babel-plugin-react-hot) & [babel-plugin-react-error-catcher](https://github.com/loggur/babel-plugin-react-error-catcher) (see [example](https://github.com/KeywordBrain/redbox-react/tree/master/examples/babel-plugin-react-hot))\n* [react-hot-loader](https://github.com/gaearon/react-hot-loader) (deprecated! see [example](https://github.com/KeywordBrain/redbox-react/tree/master/examples/react-hot-loader-example), relies on changes in unmerged [pull request](https://github.com/gaearon/react-hot-loader/pull/167) and will not be merged!)\n\nor manually:\n\n```javascript\nconst RedBox = require('redbox-react')\nconst e = new Error('boom')\nconst box = <RedBox error={e} />\n```\n\nHere is a more useful, full-fleged example:\n\n```javascript\n/* global __DEV__ */\nimport React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\n\nconst root = document.getElementById('root')\n\nif (__DEV__) {\n  const RedBox = require('redbox-react')\n  try {\n    render(<App />, root)\n  } catch (e) {\n    render(<RedBox error={e} />, root)\n  }\n} else {\n  render(<App />, root)\n}\n```\n\n## What is this good for?\nAn error that's only in the console is only half the fun. Now you can use all the wasted space where your app would be if it didn’t crash to display the error that made it crash. You should use this in development only.\n\n## Will this catch errors for me?\nNo. As you can see above, this is only a UI component for rendering errors and their stack traces. It's works great with other solutions, that automate the error catching for you, see the [examples](https://github.com/KeywordBrain/redbox-react/tree/master/examples).\n\n## Optional props\n\n`editorScheme` `[?string]` If a filename in the stack trace is local, the component can create the\nlink to open your editor using this scheme eg: `subl` to create `subl://open?url=file:///filename`.\n\n`useLines` `[boolean=true]` Line numbers in the stack trace may be unreliable depending on the\ntype of sourcemaps. You can choose to not display them with this flag.\n\n`useColumns` `[boolean=true]` Column numbers in the stack trace may be unreliable depending on the\ntype of sourcemaps. You can choose to not display them with this flag.\n\n`style` `[?object]` Allows you to override the styles used when rendering the various parts of the\ncomponent. It will be shallow-merged with the [default styles](./src/style.js).\n\nIf using [react-transform-catch-errors](https://github.com/gaearon/react-transform-catch-errors#installation) you can add these options to your `.babelrc` through the [`imports` property](https://github.com/gaearon/react-transform-catch-errors#installation).\n\n## Sourcemaps with Webpack\n\nIf using [Webpack](https://webpack.github.io) you can get accurate filenames in the stacktrace by\nsetting the `output.devtoolModuleFilenameTemplate` settings to `/[absolute-resource-path]`.\n\nIt's recommended to set `devtool` setting to `'eval'`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KeywordBrain/redbox-react.git"
  },
  "scripts": {
    "build": "npm run build:umd && npm run build:umd:min && npm run build:lib",
    "build:lib": "babel src --out-dir lib",
    "build:umd": "webpack src/index.js dist/redbox.js",
    "build:umd:min": "webpack --config webpack.config.prod.js src/index.js dist/redbox.min.js",
    "clean": "rimraf dist lib tmp",
    "lint": "standard ./src",
    "prepublish": "npm run clean && npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "npm run lint -s && babel-node ./tests | tap-spec"
  },
  "standard": {
    "parser": "babel-eslint"
  },
  "version": "1.2.5"
}
