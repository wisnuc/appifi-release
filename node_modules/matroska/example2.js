
// "G:\Downloads\Our.World.War.S01E01.FRENCH.720p.HDTV.x264-LiBERTY.zone-telechargement.com.mkv" 
// "c:\temp\20150516_150351.mp4"

var ebml = require('./index');
var fs = require('fs');
var util = require('util');

var skipTags = {
	SimpleBlock: true,
	Void: true,
	Bock: true,
	xCluster: true,
	FileData: true,
	xCues: true,
	xTracks: true,
	xInfo: true,
	xSeekHead: true,
};

var decoder = new ebml.Decoder();

console.log("Parse " + process.argv[2]);

var t1 = Date.now();

if (false) {
	decoder.parseFileInfoTagsAndAttachments(process.argv[2], function(error, document) {

		var t2 = Date.now();

		console.log("Delta=" + (t2 - t1) + "ms");

		if (error) {
			console.error(error);
		}
		console.log(document.print());

	});
	return;
}

decoder.parse(process.argv[2], function(error, document) {

	var t2 = Date.now();

	console.log("Delta=" + (t2 - t1) + "ms");

	if (true) {
		console.log(document.print());
	}

	document.normalizeSegments(function() {
	});

	document.firstSegment.addFileAttachmentSync("c:\\temp\\formation1.png");

	console.log();
	console.log("-------------------------------------------------------------------------");
	console.log();

	if (false) {

		// document.getFirstChildByName("Void").remove();
		// document.getFirstChildByName("MuxingApp").remove();
		// document.getFirstChildByName("WritingApp").remove();

		document.optimizeData(function() {

			var dest = process.argv[2] + ".copy";

			if (dest) {
				document.write(dest, {
					forceStereoMode: 1

				}, function(error) {
					if (error) {
						console.error(error);
						return;
					}

					console.log("MKV written -----------------------------------------------");

					if (true) {
						console.log(document.print());
					}

					if (false) {
						var decoder2 = new ebml.Decoder({
							skipTags: skipTags
						});

						decoder2.parseFile(dest, function(error, doc2) {
							if (error) {
								console.error(error);
								return;
							}
							console.log(doc2.print());
						});
					}

				});

			}
		});
	}

	if (false) {
		document.getInfos(function(error, infos) {
			console.log("Infos=", infos);
		});
		document.listTracks(function(error, infos) {
			console.log("Tracks=", infos);
		});
		document.listChapters({
			noTagId: true
		}, function(error, infos) {
			console.log("Chapters=", infos);
		});
		document.listTags({
			noTagId: true
		}, function(error, infos) {
			console.log("Tags=", util.inspect(infos, {
				depth: null
			}));
		});
		document.listAttachments({
			noTagId: true
		}, function(error, infos) {
			console.log("Attachments=", util.inspect(infos, {
				depth: null
			}));
		});
	}

	if (false) {
		var segment = document.firstSegment;

		console.log(segment.attachedFiles[0].FileName);

		segment.attachedFiles[0].fileName = "totot.moi";
	}

	if (false) {
		console.log(document.print());
	}
});

decoder.on('xSimpleTag:end', function(simpleTag) {
	var tagName = simpleTag.getChildByName("TagName");
	var tagLanguage = simpleTag.getChildByName("TagLanguage");
	var tagString = simpleTag.getChildByName("TagString");

	tagName = tagName && tagName.getValue();
	tagLanguage = tagLanguage && tagLanguage.getValue();
	tagString = tagString && tagString.getValue();

	console.log("Tag=", tagName, tagLanguage, tagString);
});