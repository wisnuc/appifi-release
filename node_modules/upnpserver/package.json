{
  "_args": [
    [
      {
        "raw": "upnpserver@https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
        "scope": null,
        "escapedName": "upnpserver",
        "name": "upnpserver",
        "rawSpec": "https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
        "spec": "https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
        "type": "remote"
      },
      "/home/newvm/build/release/appifi-release"
    ]
  ],
  "_from": "upnpserver@>=2.1.3 <3.0.0",
  "_id": "upnpserver@2.1.3",
  "_inCache": true,
  "_location": "/upnpserver",
  "_phantomChildren": {
    "buffer-crc32": "0.2.1",
    "range-parser": "1.0.3"
  },
  "_requested": {
    "raw": "upnpserver@https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
    "scope": null,
    "escapedName": "upnpserver",
    "name": "upnpserver",
    "rawSpec": "https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
    "spec": "https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
  "_shasum": "ae19e0dcba9c2c48dd4f5a6e47d5626d66646abd",
  "_shrinkwrap": null,
  "_spec": "upnpserver@https://registry.npmjs.org/upnpserver/-/upnpserver-2.1.3.tgz",
  "_where": "/home/newvm/build/release/appifi-release",
  "author": {
    "name": "Olivier Oeuillot"
  },
  "bugs": {
    "url": "https://github.com/oeuillot/upnpserver/issues"
  },
  "dependencies": {
    "async": "1.2",
    "debug": "2.2",
    "follow-redirects": "0.0.3",
    "ip": "0.3",
    "jstoxml": "0.2",
    "matroska": "2.2.2",
    "mime": "1.2",
    "musicmetadata": "1.0.0",
    "node-ssdp": "2.2.1",
    "node-uuid": "1.4",
    "send": "0.3",
    "underscore": "1.6",
    "xmldoc": "0.1.2"
  },
  "description": "Simple Upnpserver server. It supports several audio tags (id3,...) and matroska metadatas.",
  "devDependencies": {
    "mocha": "~2.1.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "homepage": "https://github.com/oeuillot/upnpserver#readme",
  "keywords": [
    "Node.js",
    "ushare",
    "mediatomb",
    "upnp"
  ],
  "license": "GPL",
  "main": "api.js",
  "name": "upnpserver",
  "optionalDependencies": {},
  "readme": "# upnpserver\r\n![upnpserver icon](icon/icon_128.png)\r\n\r\nUpnpServer is a fast and light UPnP server written in NodeJS.\r\nThis version does not need an external database (mysql, mongodb), it stores all information in memory.\r\n\r\n\r\n## Compatibility\r\n\r\n- Freebox HD\r\n- Soundbridge\r\n- ht5streamer \r\n- Intel Device Validator\r\n- Samsung AllShare play\r\n- LG Smart Share\r\n- Android\r\n    - VPlayer (with UPNP Plugin)\r\n    - NX Player\r\n\r\n## Installation\r\n\r\n    $ npm install upnpserver\r\n\r\n## Command line\r\n\r\nFor command line, install [upnpserver-cli](https://github.com/oeuillot/upnpserver-cli) package. \r\n \r\n## API Usage\r\n\r\n```javascript\r\nvar Server = require(\"upnpserver\");\r\n\r\nvar server = new Server({ /* configuration, see below */ }, [\r\n  '/home/disk1',\r\n  { path: '/home/myDisk' },\r\n  { path: '/media/movies', mountPoint: '/My movies'},\r\n  { path: '/media/albums', mountPoint: '/Personnal/My albums', type: 'music' }\r\n]);\r\n\r\nserver.start();\r\n```\r\n\r\n##Configuration\r\nServer constructor accepts an optional configuration object. At the moment, the following is supported:\r\n\r\n- `log` _Boolean_ Enable/disable logging. Default: false.\r\n- `logLevel` _String_ Specifies log level to print. Possible values: `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `FATAL`. Defaults to `ERROR`.\r\n- `name` _String_ Name of server. Default 'Node Server'\r\n- `uuid` _String_ UUID of server. (If not specified, a UUID v4 will be generated)\r\n- `hostname` _String_ Hostname to bind the server. Default: 0.0.0.0\r\n- `httpPort` _Number_ Http port. Default: 10293\r\n- `dlnaSupport` _Boolean_ Enable/disable dlna support. Default: true\r\n- `strict` _Boolean_ Use only official UPnP attributes. Default: false\r\n- `lang` _String_ Specify the language (en, fr) for virtual folder names. Default: en\r\n- `ssdpLog` _Boolean_ Enable log of ssdp layer. Default: false\r\n- `ssdpLogLevel` _String_ Log level of ssdp layer.\r\n\r\n## Testing\r\nFor testing purposes used *mocha* framework. To run tests, you should do this:\r\n```bash\r\nmake test\r\n```\r\n\r\n## Author\r\n\r\nOlivier Oeuillot\r\n\r\n## Contributors\r\n\r\nhttps://github.com/oeuillot/upnpserver/graphs/contributors\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/oeuillot/upnpserver.git"
  },
  "version": "2.1.3"
}
