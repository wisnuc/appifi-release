{
  "_args": [
    [
      {
        "name": "react-event-listener",
        "raw": "react-event-listener@https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
        "rawSpec": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
        "type": "remote"
      },
      "/home/appifi/release/appifi-tarball"
    ]
  ],
  "_from": "react-event-listener@>=0.1.1 <0.2.0",
  "_id": "react-event-listener@0.1.2",
  "_inCache": true,
  "_location": "/react-event-listener",
  "_phantomChildren": {},
  "_requested": {
    "name": "react-event-listener",
    "raw": "react-event-listener@https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
    "rawSpec": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/material-ui"
  ],
  "_resolved": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
  "_shasum": "f1fd2f0c5084013e95b8b3ac3fb0d1d4cde42813",
  "_shrinkwrap": null,
  "_spec": "react-event-listener@https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.1.2.tgz",
  "_where": "/home/appifi/release/appifi-tarball",
  "author": {
    "name": "olivier.tassinari@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/oliviertassinari/react-event-listener/issues"
  },
  "config": {
    "mocha": "--compilers js:babel-core/register ./src/**/__tests__/*.test.js --require ./src/__tests__/setup.js"
  },
  "dependencies": {},
  "description": "A React component that allow to bind events on the global scope",
  "devDependencies": {
    "babel-cli": "^6.4.5",
    "babel-core": "^6.4.5",
    "babel-eslint": "^6.0.2",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-1": "^6.3.13",
    "chai": "^3.5.0",
    "codeclimate-test-reporter": "^0.3.0",
    "enzyme": "^2.2.0",
    "eslint": "^2.7.0",
    "eslint-plugin-react": "^5.0.1",
    "expect": "^1.12.2",
    "glob": "^7.0.3",
    "isparta": "^4.0.0",
    "istanbul": "^0.4.0",
    "jsdom": "^8.3.0",
    "minimist": "^1.2.0",
    "mocha": "^2.3.3",
    "react": "^15.0.1",
    "react-addons-test-utils": "^15.0.1",
    "react-dom": "^15.0.1",
    "rimraf": "^2.4.3"
  },
  "homepage": "https://github.com/oliviertassinari/react-event-listener",
  "keywords": [
    "react",
    "event",
    "listener",
    "binding"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "react-event-listener",
  "optionalDependencies": {},
  "readme": "# React event listener\n\n> A React component for binding events on the global scope.\n\n[![npm version](https://img.shields.io/npm/v/react-event-listener.svg?style=flat-square)](https://www.npmjs.com/package/react-event-listener)\n[![npm downloads](https://img.shields.io/npm/dm/react-event-listener.svg?style=flat-square)](https://www.npmjs.com/package/react-event-listener)\n[![Build Status](https://travis-ci.org/oliviertassinari/react-event-listener.svg?branch=master)](https://travis-ci.org/oliviertassinari/react-event-listener)\n\n[![Dependencies](https://img.shields.io/david/oliviertassinari/react-event-listener.svg?style=flat-square)](https://david-dm.org/oliviertassinari/react-event-listener)\n[![DevDependencies](https://img.shields.io/david/dev/oliviertassinari/react-event-listener.svg?style=flat-square)](https://david-dm.org/oliviertassinari/react-event-listener#info=devDependencies&view=list)\n\n## Getting Started\n\n```sh\nnpm install react-event-listener\n```\n\n## Usage\n\n```js\nimport React from 'react';\nimport EventListener from 'react-event-listener';\n\nclass MyComponent extends React.Component {\n  handleResize = () => {\n    console.log('resize');\n  };\n\n  handleMouseMove = () => {\n    console.log('mousemove');\n  };\n\n  render() {\n    return (\n      <div>\n        <EventListener elementName=\"document\" onMouseMove={this.handleMouseMove} />\n        <EventListener elementName=\"window\" onResize={this.handleResize} />\n      </div>\n    );\n  }\n}\n```\n\n### Note on Testing\n\nIn [this](https://github.com/facebook/react/issues/5043) issue from React, `TestUtils.Simulate.` methods won't bubble up to `window` or `document`. As a result, you must use [`document.dispatchEvent`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent) or simulate event using [native DOM api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click).\n\nSee our [test cases](https://github.com/oliviertassinari/react-event-listener/blob/master/src/__tests__/index.spec.js) for more information.\n\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/oliviertassinari/react-event-listener.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "clean": "rimraf lib",
    "lint": "eslint src test",
    "prebuild": "npm run lint && npm run clean",
    "prepublish": "npm run build",
    "pretest": "npm run lint",
    "pretest:cov": "npm run lint",
    "test": "npm run test:unit && mocha $npm_package_config_mocha",
    "test:cov": "babel-node ./node_modules/.bin/isparta cover --report lcov _mocha -- $npm_package_config_mocha",
    "test:unit": "babel-node test/unit.js",
    "test:watch": "npm test -- --watch"
  },
  "version": "0.1.2"
}
