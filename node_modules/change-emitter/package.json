{
  "_args": [
    [
      {
        "name": "change-emitter",
        "raw": "change-emitter@https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
        "rawSpec": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
        "type": "remote"
      },
      "/home/wisnuc/temp/release/appifi-release"
    ]
  ],
  "_from": "change-emitter@>=0.1.2 <0.2.0",
  "_id": "change-emitter@0.1.2",
  "_inCache": true,
  "_location": "/change-emitter",
  "_phantomChildren": {},
  "_requested": {
    "name": "change-emitter",
    "raw": "change-emitter@https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
    "rawSpec": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/recompose"
  ],
  "_resolved": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
  "_shasum": "6b88ca4d5d864e516f913421b11899a860aee8db",
  "_shrinkwrap": null,
  "_spec": "change-emitter@https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.2.tgz",
  "_where": "/home/wisnuc/temp/release/appifi-release",
  "author": {
    "email": "acdlite@me.com",
    "name": "Andrew Clark"
  },
  "ava": {
    "babel": "inherit",
    "files": [
      "**/*-test.js"
    ],
    "require": [
      "babel-register"
    ],
    "source": [
      "**/*.js"
    ]
  },
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "dependencies": {},
  "description": "Listen for changes. Like an event emitter that only emits a single event type. Really tiny.",
  "devDependencies": {
    "ava": "^0.14.0",
    "babel-cli": "^6.8.0",
    "babel-core": "^6.8.0",
    "babel-preset-es2015": "^6.6.0",
    "eslint": "^2.10.1",
    "eslint-config-airbnb-base": "^3.0.1",
    "eslint-plugin-import": "^1.8.0",
    "sinon": "^1.17.4"
  },
  "keywords": [
    "change",
    "event",
    "emitter"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "change-emitter",
  "optionalDependencies": {},
  "readme": "change-emitter\n==============\n\nListen for changes. Like an event emitter that only emits a single event type. Really tiny.\n\nI extracted this from Redux's `createStore()` because I found it to be useful in other contexts. Use it where you want the most minimal event subscription implementation possible.\n\n## Usage\n\n```js\nimport { createChangeEmitter } from 'change-emitter'\n\nconst emitter = createChangeEmitter()\n\n// Called `listen` instead of `subscribe` to avoid confusion with observable spec\nconst unlisten = emitter.listen((...args) => {\n  console.log(args)\n})\n\nemitter.log(1, 2, 3) // logs `[1, 2, 3]`\nunlisten()\nemitter.log(4, 5, 6) // doesn't log\n```\n\n## Larger example\n\nHere's a (partial) implementation of Redux's `createStore`:\n\n```js\nconst createStore = (reducer, initialState) => {\n  let state = initialState\n  const emitter = createChangeEmitter()\n\n  function subscribe(listener) {\n    return emitter.listen(listener)\n  }\n\n  function dispatch(action) {\n    state = reducer(state, action)\n    emitter.emit()\n    return action\n  }\n\n  function getState() {\n    return state\n  }\n\n  return {\n    subscribe,\n    dispatch,\n    getState\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "babel src --out-dir lib",
    "check": "eslint src",
    "prepublish": "npm run check && npm run test && npm run build",
    "test": "ava",
    "test:watch": "npm run test -- --watch"
  },
  "version": "0.1.2"
}
